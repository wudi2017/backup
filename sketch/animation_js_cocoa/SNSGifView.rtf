{\rtf1\ansi\ansicpg936\cocoartf1561\cocoasubrtf400
{\fonttbl\f0\fnil\fcharset0 AndaleMono;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;\red67\green67\blue67;\red0\green0\blue255;
\red251\green0\blue7;}
{\*\expandedcolortbl;;\csgray\c0;\csgray\c33333;\cssrgb\c0\c0\c100000;
\cssrgb\c100000\c0\c0;}
\paperw11900\paperh16840\margl1440\margr1440\vieww26900\viewh14180\viewkind0
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\slleading20\pardirnatural\partightenfactor0

\f0\fs24 \cf2 log(\cf3 "start"\cf2 )\
coscript.setShouldKeepAround(\cf4 true\cf2 );\
\
\cf4 var\cf2  identifier = \cf3 "myToolbarThread"\cf2 ;\
\cf4 var\cf2  threadDictionary = NSThread.mainThread().threadDictionary();\
\cf4 var\cf2  Toolbar = threadDictionary[identifier];\
Toolbar = NSPanel.alloc().init();\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\slleading20\pardirnatural\partightenfactor0
\cf5 //Toolbar.setStyleMask(NSTitledWindowMask + NSFullSizeContentViewWindowMask);\cf2 \
Toolbar.setBackgroundColor(NSColor.colorWithRed_green_blue_alpha(\cf4 0.9\cf2 , \cf4 0.9\cf2 , \cf4 0.9\cf2 , \cf4 1\cf2 ));\
\cf5 //Toolbar.setTitleVisibility(NSWindowTitleHidden);\cf2 \
Toolbar.setTitlebarAppearsTransparent(\cf4 true\cf2 );\
Toolbar.setFrame_display(NSMakeRect(\cf4 0\cf2 , \cf4 0\cf2 , \cf4 800\cf2 , \cf4 480\cf2 ), \cf4 false\cf2 );\
Toolbar.setMovableByWindowBackground(\cf4 true\cf2 );\
Toolbar.becomeKeyWindow();\
Toolbar.setLevel(NSFloatingWindowLevel);\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\slleading20\pardirnatural\partightenfactor0
\cf4 var\cf2  contentView = Toolbar.contentView();\
context.document.showMessage(\cf3 'Start'\cf2 )   \
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\slleading20\pardirnatural\partightenfactor0
\cf5 // SNSGifView\cf2 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\slleading20\pardirnatural\partightenfactor0
\cf4 class\cf2  SNSGifView\
\{\
    constructor()\
    \{\
        \cf4 this\cf2 .imageView = NSImageView.alloc().init(); \
        \cf5 //this.imageView.imageFrameStyle = NSImageFramePhoto;\cf2 \
        \cf4 this\cf2 .imageView.alphaValue = \cf4 0.8\cf2 \
\
        \cf4 this\cf2 .image = \cf4 nil\cf2 ;\
        \cf4 this\cf2 .imageList = \cf4 nil\cf2 \
        \cf4 this\cf2 .totalFrameCnt = \cf4 0\cf2 \
    \}\
    setImage(image)\
    \{\
        \cf4 this\cf2 .image = image;\
\
        \cf5 //this.imageView.image = image; // this will auto repeat play, cannot control\cf2 \
        \cf4 this\cf2 .reps = image.representations();\
        \cf4 this\cf2 .bitmapRep = \cf4 nil\cf2 \
        \cf4 this\cf2 .totalFrameCnt = \cf4 0\cf2 ;\
        \cf4 for\cf2  (\cf4 var\cf2  x = \cf4 0\cf2 ; x< \cf4 this\cf2 .reps.count(); x++) \{\
            \cf4 this\cf2 .bitmapRep = \cf4 this\cf2 .reps[x];\
            \cf4 var\cf2  props = \cf4 this\cf2 .bitmapRep.valueForProperty(NSImageFrameCount);\
            \cf4 this\cf2 .totalFrameCnt = props.intValue();\
        \};\
        \cf5 //log("totalFrameCnt=" + this.totalFrameCnt.toString())\cf2 \
\
        \cf5 //set image current\cf2 \
        \cf4 if\cf2 (\cf4 this\cf2 .totalFrameCnt > \cf4 0\cf2 ) \{\
            \cf4 var\cf2  number = NSNumber.numberWithInt(\cf4 0\cf2 )\
            \cf4 this\cf2 .bitmapRep.setProperty_withValue(NSImageCurrentFrame, number)\
            \cf4 var\cf2  repData = \cf4 this\cf2 .bitmapRep.representationUsingType_properties(NSPNGFileType, \cf4 nil\cf2 )\
            image = NSImage.alloc().initWithData(repData);\
            \cf4 this\cf2 .imageView.image = image\
        \};\
    \}\
    setImageFile(filename)\
    \{\
        \cf4 this\cf2 .setImage(NSImage.alloc().initWithContentsOfFile(filename));\
    \}\
    setImagePath(filepath)\
    \{\
        \cf4 this\cf2 .imageList=[]\
\
        \cf4 var\cf2  fm=NSFileManager.defaultManager();\
        \cf4 var\cf2  strarray=fm.contentsOfDirectoryAtPath_error(filepath,\cf4 nil\cf2 )\
        \cf4 var\cf2  count=strarray.count();\
\
        \cf4 var\cf2  filelist=[]\
        \cf4 for\cf2 (\cf4 var\cf2  i=\cf4 0\cf2 ;i<count;i++)\
        \{\
            \cf4 var\cf2  filename=strarray.objectAtIndex(i);\
            \cf4 var\cf2  filefullname=filepath+\cf3 "/"\cf2 +filename;\
            \cf4 if\cf2 (filefullname.match(\cf3 ".png"\cf2 ))\
            \{\
                filelist.push(filefullname)\
            \}\
        \}\
        filelist.sort();\
        \cf5 //log(filelist)\cf2 \
\
        \cf4 for\cf2 (\cf4 var\cf2  i=\cf4 0\cf2 ;i<filelist.length;i++)\
        \{\
            \cf4 var\cf2  image = NSImage.alloc().initWithContentsOfFile(filelist[i]);\
            \cf4 this\cf2 .imageList.push(image)\
        \}\
\
        \cf4 this\cf2 .totalFrameCnt=filelist.length\
    \
        \cf5 //set image current\cf2 \
        \cf4 if\cf2 (\cf4 this\cf2 .imageList.length>\cf4 0\cf2 )\
        \{\
            \cf4 this\cf2 .imageView.image = \cf4 this\cf2 .imageList[\cf4 0\cf2 ]\
        \}\
    \}\
    setFrame(frame)\
    \{\
        \cf4 this\cf2 .imageView.setFrame(frame);\
    \}\
    getView()\
    \{\
        \cf4 return\cf2  \cf4 this\cf2 .imageView;\
    \}\
    reset()\
    \{ \
        \cf4 var\cf2  imageView = \cf4 this\cf2 .imageView;\
        \cf4 var\cf2  imageList = \cf4 this\cf2 .imageList;\
        \cf4 var\cf2  totalFrameCnt = \cf4 this\cf2 .totalFrameCnt;\
        imageView.image=imageList[\cf4 0\cf2 ]\
    \}\
    play(timeinterval, replay=\cf4 1\cf2 )\
    \{\
        \cf4 var\cf2  totalFrameCnt = \cf4 this\cf2 .totalFrameCnt;\
        \cf4 var\cf2  speedOneFrame = timeinterval/totalFrameCnt;\
        \cf4 var\cf2  curFrameIndex = \cf4 0\cf2 ;\
        \cf4 var\cf2  imageView = \cf4 this\cf2 .imageView;\
        \cf4 var\cf2  replayTimes = replay;\
\
        \cf4 var\cf2  bitmapRep = \cf4 this\cf2 .bitmapRep;\
        \cf4 var\cf2  imageList = \cf4 this\cf2 .imageList;\
        \
        \cf4 for\cf2 (\cf4 var\cf2  i=\cf4 0\cf2 ; i<=totalFrameCnt*replayTimes; i++)\
        \{\
            coscript.setShouldKeepAround(\cf4 true\cf2 );\
            coscript.scheduleWithInterval_jsFunction(i*speedOneFrame, \cf4 function\cf2 () \{\
\
                \cf4 if\cf2 (curFrameIndex>=totalFrameCnt)\
                \{\
                    curFrameIndex=\cf4 0\cf2 ;\
                \}\
                \cf5 //context.document.showMessage(curFrameIndex.toString());\cf2 \
                \
                \cf5 // draw current frame\cf2 \
                \cf4 var\cf2  image=\cf4 nil\cf2 \
                \cf4 if\cf2 (bitmapRep)\
                \{\
                    \cf4 var\cf2  number = NSNumber.numberWithInt(curFrameIndex);\
                    bitmapRep.setProperty_withValue(NSImageCurrentFrame, number);\
                    \cf4 var\cf2  repData = bitmapRep.representationUsingType_properties(NSPNGFileType, \cf4 nil\cf2 )\
                    image = NSImage.alloc().initWithData(repData);\
                \}\
                \cf4 if\cf2 (imageList)\
                \{\
                    image = imageList[curFrameIndex]\
                \}\
                \
                imageView.image = image;\
                \
                curFrameIndex=curFrameIndex+\cf4 1\cf2 \
            \});\
        \}\
      \cf5 //   var view2_startFrame = NSValue.valueWithRect(imageView.frame());//chu chang\cf2 \
      \cf5 //  var view2_endFrame =  NSValue.valueWithRect(imageView.frame());\cf2 \
      \cf5 // var view2_key = [NSViewAnimationTargetKey,NSViewAnimationStartFrameKey,NSViewAnimationEndFrameKey];\cf2 \
      \cf5 // var view2_value = [imageView,view2_startFrame,view2_endFrame];\cf2 \
      \cf5 // var view2_dictionary = [NSDictionary dictionaryWithObjects:(view2_value) forKeys:(view2_key)];\cf2 \
      \cf5 // var animation = NSViewAnimation.alloc().initWithViewAnimations(NSArray.arrayWithObject(view2_dictionary));\cf2 \
      \cf5 //                animation.animationCurve = NSAnimationEaseIn;\cf2 \
      \cf5 //               animation.duration = 1;\cf2 \
      \cf5 //               [animation setAnimationBlockingMode:NSAnimationBlocking];\cf2 \
      \cf5 //               [animation startAnimation];\cf2 \
\
    \}\
\}\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\slleading20\pardirnatural\partightenfactor0
\cf5 ///////////////////////////////////////////////////////////////////////////////////////////\cf2 \
\
imageView = NSImageView.alloc().init();\
imageView.frame = NSMakeRect(\cf4 0\cf2 , \cf4 0\cf2 , \cf4 700\cf2 , \cf4 420\cf2 );\
imageView.imageFrameStyle = NSImageFramePhoto; \
imageView.imageScaling = NSImageScaleNone;\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\slleading20\pardirnatural\partightenfactor0
\cf4 var\cf2  image = NSImage.alloc().initWithContentsOfFile(\cf3 "/Users/navibase/sketch-iauto/pic1.jpeg"\cf2 );\
imageView.image = image\
contentView.addSubview(imageView);\
\
\
\cf4 var\cf2  gifView = \cf4 new\cf2  SNSGifView()\
gifView.setImage(NSImage.alloc().initWithContentsOfFile(\cf3 "/Users/navibase/sketch-iauto/timg.gif"\cf2 ))\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\slleading20\pardirnatural\partightenfactor0
\cf5 //gifView.setImageFile("/Users/navibase/sketch-iauto/timg.gif");\cf2 \
\cf5 //gifView.setImagePath("/Users/navibase/sketch-iauto/frameanimation/Selected");\cf2 \
gifView.setFrame(NSMakeRect(\cf4 0\cf2 , \cf4 0\cf2 , \cf4 300\cf2 , \cf4 300\cf2 ))\
contentView.addSubview(gifView.getView());\
gifView.play(\cf4 1\cf2 );\
\
\
\cf5 // button1\cf2 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\slleading20\pardirnatural\partightenfactor0
\cf4 var\cf2  button1 = NSButton.alloc().initWithFrame(NSMakeRect(\cf4 400\cf2 , \cf4 0\cf2 , \cf4 80\cf2 , \cf4 20\cf2 ));\
button1.setAttributedTitle(\cf3 "button1"\cf2 );\
button1.setBordered(\cf4 true\cf2 );\
button1.sizeToFit();\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\slleading20\pardirnatural\partightenfactor0
\cf5 //button1.setButtonType(NSMomentaryChangeButton)\cf2 \
button1.setCOSJSTargetFunction(\cf4 function\cf2 (sender)\{\
        gifView.play(\cf4 1\cf2 );\
    \});\
contentView.addSubview(button1);\
\
\cf5 // button2\cf2 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\slleading20\pardirnatural\partightenfactor0
\cf4 var\cf2  button1 = NSButton.alloc().initWithFrame(NSMakeRect(\cf4 500\cf2 , \cf4 0\cf2 , \cf4 80\cf2 , \cf4 20\cf2 ));\
button1.setAttributedTitle(\cf3 "button2"\cf2 );\
button1.setBordered(\cf4 true\cf2 );\
button1.sizeToFit();\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\slleading20\pardirnatural\partightenfactor0
\cf5 //button1.setButtonType(NSMomentaryChangeButton)\cf2 \
button1.setCOSJSTargetFunction(\cf4 function\cf2 (sender)\{\
        gifView.play(\cf4 2\cf2 , \cf4 2\cf2 );\
    \});\
contentView.addSubview(button1);\
\
\cf5 /////////////////////////////////////////////////////////////////////\cf2 \
\
threadDictionary[identifier] = Toolbar;\
Toolbar.center();\
Toolbar.makeKeyAndOrderFront(\cf4 nil\cf2 );\
\
log(\cf3 "over"\cf2 )}