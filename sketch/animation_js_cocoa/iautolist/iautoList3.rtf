{\rtf1\ansi\ansicpg936\cocoartf1561\cocoasubrtf400
{\fonttbl\f0\fnil\fcharset0 AndaleMono;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;\red67\green67\blue67;\red0\green0\blue255;
\red251\green0\blue7;}
{\*\expandedcolortbl;;\csgray\c0;\csgray\c33333;\cssrgb\c0\c0\c100000;
\cssrgb\c100000\c0\c0;}
\paperw11900\paperh16840\margl1440\margr1440\vieww23880\viewh14460\viewkind0
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\slleading20\pardirnatural\partightenfactor0

\f0\fs24 \cf2 log(\cf3 "start"\cf2 )\
coscript.setShouldKeepAround(\cf4 true\cf2 );\
\
\cf4 var\cf2  identifier = \cf3 "myToolbarThread"\cf2 ;\
\cf4 var\cf2  threadDictionary = NSThread.mainThread().threadDictionary();\
\cf4 var\cf2  Toolbar = threadDictionary[identifier];\
Toolbar = NSPanel.alloc().init();\
\cf5 //Toolbar.setStyleMask(NSTitledWindowMask + NSFullSizeContentViewWindowMask);\cf2 \
Toolbar.setBackgroundColor(NSColor.colorWithRed_green_blue_alpha(\cf4 0.9\cf2 , \cf4 0.9\cf2 , \cf4 0.9\cf2 , \cf4 1\cf2 ));\
\cf5 //Toolbar.setTitleVisibility(NSWindowTitleHidden);\cf2 \
Toolbar.setTitlebarAppearsTransparent(\cf4 true\cf2 );\
Toolbar.setFrame_display(NSMakeRect(\cf4 0\cf2 , \cf4 0\cf2 , \cf4 800\cf2 , \cf4 480\cf2 ), \cf4 false\cf2 );\
Toolbar.setMovableByWindowBackground(\cf4 true\cf2 );\
Toolbar.becomeKeyWindow();\
Toolbar.setLevel(NSFloatingWindowLevel);\
\cf4 var\cf2  contentView = Toolbar.contentView();\
context.document.showMessage(\cf3 'Start'\cf2 )   \
\
\cf5 /////////////////////////////////////////////////////////////////////\cf2 \
\
imageView = NSImageView.alloc().init();\
imageView.frame = NSMakeRect(\cf4 0\cf2 , \cf4 0\cf2 , \cf4 700\cf2 , \cf4 420\cf2 );\
imageView.imageFrameStyle = NSImageFramePhoto; \
imageView.imageScaling = NSImageScaleNone;\
\cf4 var\cf2  image = NSImage.alloc().initWithContentsOfFile(\cf3 "/Users/navibase/sketch-iauto/pic1.jpeg"\cf2 );\
imageView.image = image\
contentView.addSubview(imageView);\
\
\
\cf4 class\cf2  IAutoList\
\{\
    constructor(context)\
    \{\
        log(\cf3 "IAutoList.constructor"\cf2 )\
\
        \cf4 this\cf2 .context = context\
        \cf4 this\cf2 .mainView = NSView.alloc().init();\
        \cf4 this\cf2 .mainView.setHidden(\cf4 true\cf2 )\
        \cf5 // set layer\cf2 \
        \cf4 this\cf2 .mainView.setWantsLayer(\cf4 true\cf2 );\
        \cf4 var\cf2  viewALayer = CALayer.layer();\
        viewALayer.setBackgroundColor(CGColorCreateGenericRGB(\cf4 0.8\cf2 ,\'a0\cf4 0.0\cf2 ,\'a0\cf4 0.0\cf2 ,\'a0\cf4 0.3\cf2 ));\
        \cf4 this\cf2 .mainView.setLayer(viewALayer);\
\
        \cf4 this\cf2 .btnList = []\
\
        \cf4 this\cf2 .width = \cf4 0\cf2 ;\
        \cf4 this\cf2 .height = \cf4 0\cf2 ;\
        \cf4 this\cf2 .itemHeight = \cf4 0\cf2 ;\
    \}\
    setFrame(frame, itemHeight)\
    \{\
        \cf4 this\cf2 .mainView.frame = frame;\
        \cf4 this\cf2 .width = frame.size.width;\
        \cf4 this\cf2 .height = frame.size.height;\
        \cf4 this\cf2 .itemHeight = itemHeight\
    \}\
    getView()\
    \{\
        log(\cf3 "IAutoList.mainView"\cf2 )\
        \cf4 return\cf2  \cf4 this\cf2 .mainView;\
    \}\
    addButton(name, btn)\
    \{\
        btn.setAttributedTitle(name);\
        btn.frame = NSMakeRect(\cf4 0\cf2 , \cf4 0\cf2 , \cf4 this\cf2 .width, \cf4 this\cf2 .itemHeight);\
        btn.alphaValue = \cf4 0.6\cf2 ;\
        \cf4 this\cf2 .btnList.push(btn)\
    \}\
    animation1()\
    \{\
        log(\cf3 "IAutoList.show"\cf2 )\
        \cf4 this\cf2 .mainView.setHidden(\cf4 false\cf2 )\
        \cf4 for\cf2 (\cf4 var\cf2  i=\cf4 0\cf2 ; i< \cf4 this\cf2 .btnList.length; i++)\
        \{\
            \cf4 var\cf2  btnY = \cf4 this\cf2 .height - (i+\cf4 1\cf2 )*\cf4 this\cf2 .itemHeight - \cf4 2\cf2 *i;\
            \cf4 this\cf2 .btnList[i].frame = NSMakeRect(\cf4 0\cf2 , btnY, \cf4 this\cf2 .width, \cf4 this\cf2 .itemHeight);\
            \cf4 this\cf2 .mainView.addSubview(\cf4 this\cf2 .btnList[i]);\
        \}\
\
        \cf4 for\cf2 (\cf4 var\cf2  i=\cf4 0\cf2 ; i< \cf4 this\cf2 .btnList.length; i++)\
        \{\
            \cf4 var\cf2  animationTarget =  \cf4 this\cf2 .btnList[i]\
            \cf4 var\cf2  startframe = NSValue.valueWithRect(NSMakeRect(\cf4 0\cf2 , -i*\cf4 100\cf2 , \cf4 this\cf2 .width, \cf4 this\cf2 .itemHeight));\
            \cf4 var\cf2  endframe = NSValue.valueWithRect(NSMakeRect(\cf4 this\cf2 .btnList[i].frame().origin.x, \cf4 this\cf2 .btnList[i].frame().origin.y, \cf4 this\cf2 .width, \cf4 this\cf2 .itemHeight));\
            \cf5 //var endframe = NSValue.valueWithRect(this.btnList[i].frame());\cf2 \
            \cf4 var\cf2  keys = [NSViewAnimationTargetKey,NSViewAnimationStartFrameKey,NSViewAnimationEndFrameKey];\
            \cf4 var\cf2  values = [animationTarget,startframe,endframe];\
            \cf4 var\cf2  dictionary = [NSDictionary dictionaryWithObjects:(values) forKeys:(keys)];\
            \cf4 var\cf2  animation = NSViewAnimation.alloc().initWithViewAnimations(NSArray.arrayWithObject(dictionary));\
            animation.animationCurve = NSAnimationEaseIn;\
            animation.duration = \cf4 0.3\cf2 +\cf4 0.2\cf2 *i;\
            \cf5 // NSAnimationNonblocking\'a0NSAnimationNonblockingThreaded NSAnimationBlocking\cf2 \
            animation.setAnimationBlockingMode(NSAnimationNonblockingThreaded);\
            animation.startAnimation();\
\
        \}\
\
    \}\
\
    animation2()\
    \{\
        log(\cf3 "IAutoList.show"\cf2 )\
        \cf4 for\cf2 (\cf4 var\cf2  i=\cf4 0\cf2 ; i< \cf4 this\cf2 .btnList.length; i++)\
        \{\
            \cf4 var\cf2  btnY = \cf4 this\cf2 .height - (i+\cf4 1\cf2 )*\cf4 this\cf2 .itemHeight - \cf4 2\cf2 *i;\
            \cf4 this\cf2 .btnList[i].frame = NSMakeRect(\cf4 0\cf2 , btnY, \cf4 this\cf2 .width, \cf4 this\cf2 .itemHeight);\
            \cf4 this\cf2 .mainView.addSubview(\cf4 this\cf2 .btnList[i]);\
        \}\
\
        \cf4 for\cf2 (\cf4 var\cf2  i=\cf4 0\cf2 ; i< \cf4 this\cf2 .btnList.length; i++)\
        \{\
            \cf4 var\cf2  animationTarget =  \cf4 this\cf2 .btnList[i]\
            \cf4 var\cf2  startframe = NSValue.valueWithRect(NSMakeRect(\cf4 this\cf2 .width*\cf4 2\cf2 , \cf4 this\cf2 .btnList[i].frame().origin.y, \cf4 this\cf2 .width, \cf4 this\cf2 .itemHeight));\
            \cf4 var\cf2  endframe = NSValue.valueWithRect(\cf4 this\cf2 .btnList[i].frame());\
            \cf4 var\cf2  keys = [NSViewAnimationTargetKey,NSViewAnimationStartFrameKey,NSViewAnimationEndFrameKey];\
            \cf4 var\cf2  values = [animationTarget,startframe,endframe];\
            \cf4 var\cf2  dictionary = [NSDictionary dictionaryWithObjects:(values) forKeys:(keys)];\
            \cf4 var\cf2  animation = NSViewAnimation.alloc().initWithViewAnimations(NSArray.arrayWithObject(dictionary));\
            animation.animationCurve = NSAnimationEaseIn;\
            animation.duration = \cf4 0.5\cf2 +\cf4 0.2\cf2 *i;\
            animation.setAnimationBlockingMode(NSAnimationNonblockingThreaded);\
            animation.startAnimation();\
        \}\
        \
        \cf4 this\cf2 .mainView.setHidden(\cf4 false\cf2 )\
    \}\
    stretch(frame)\
    \{\
        log(\cf3 "IAutoList.show"\cf2 )\
        \cf5 // add button\cf2 \
        \cf4 for\cf2 (\cf4 var\cf2  i=\cf4 0\cf2 ; i< \cf4 this\cf2 .btnList.length; i++)\
        \{\
            \cf4 var\cf2  btnY = \cf4 this\cf2 .height - (i+\cf4 1\cf2 )*\cf4 this\cf2 .itemHeight - \cf4 2\cf2 *i;\
            \cf4 this\cf2 .btnList[i].frame = NSMakeRect(\cf4 0\cf2 , btnY, \cf4 this\cf2 .width, \cf4 this\cf2 .itemHeight);\
            \cf4 this\cf2 .mainView.addSubview(\cf4 this\cf2 .btnList[i]);\
        \}\
        \cf5 // save W H\cf2 \
        \cf4 this\cf2 .width = frame.size.width;\
        \cf4 this\cf2 .height = frame.size.height;\
\
        \cf4 var\cf2  animationTarget =  \cf4 this\cf2 .mainView\
        \cf4 var\cf2  startframe = NSValue.valueWithRect(\cf4 this\cf2 .mainView.frame());\
        \cf4 var\cf2  endframe = NSValue.valueWithRect(frame);\
        \cf4 var\cf2  keys = [NSViewAnimationTargetKey,NSViewAnimationStartFrameKey,NSViewAnimationEndFrameKey];\
        \cf4 var\cf2  values = [animationTarget,startframe,endframe];\
        \cf4 var\cf2  dictionary = [NSDictionary dictionaryWithObjects:(values) forKeys:(keys)];\
        \cf4 var\cf2  animation = NSViewAnimation.alloc().initWithViewAnimations(NSArray.arrayWithObject(dictionary));\
        animation.animationCurve = NSAnimationEaseIn;\
        animation.duration = \cf4 0.5\cf2 ;\
        animation.setAnimationBlockingMode(NSAnimationNonblockingThreaded);\
        animation.startAnimation();\
\
        \cf4 for\cf2 (\cf4 var\cf2  i=\cf4 0\cf2 ; i< \cf4 this\cf2 .btnList.length; i++)\
        \{\
            \cf4 var\cf2  animationTarget =  \cf4 this\cf2 .btnList[i]\
            \cf4 var\cf2  startframe = NSValue.valueWithRect(NSMakeRect(\cf4 this\cf2 .btnList[i].frame().origin.x, \cf4 this\cf2 .btnList[i].frame().origin.y, \
                \cf4 this\cf2 .btnList[i].frame().size.width, \cf4 this\cf2 .itemHeight));\
            \cf4 var\cf2  endframe = NSValue.valueWithRect(NSMakeRect(\cf4 0\cf2 , \cf4 this\cf2 .btnList[i].frame().origin.y, frame.size.width, \cf4 this\cf2 .itemHeight));\
            log(startframe)\
log(endframe)\
            \cf4 var\cf2  keys = [NSViewAnimationTargetKey,NSViewAnimationStartFrameKey,NSViewAnimationEndFrameKey];\
            \cf4 var\cf2  values = [animationTarget,startframe,endframe];\
            \cf4 var\cf2  dictionary = [NSDictionary dictionaryWithObjects:(values) forKeys:(keys)];\
            \cf4 var\cf2  animation = NSViewAnimation.alloc().initWithViewAnimations(NSArray.arrayWithObject(dictionary));\
            animation.animationCurve = NSAnimationEaseIn;\
            animation.duration = \cf4 0.5\cf2 ;\
            animation.setAnimationBlockingMode(NSAnimationNonblockingThreaded);\
            animation.startAnimation();\
        \}\
\
        \cf4 this\cf2 .mainView.setHidden(\cf4 false\cf2 )\
    \}\
\}\
\
iautoList = \cf4 new\cf2  IAutoList();\
iautoList.setFrame(NSMakeRect(\cf4 50\cf2 , \cf4 50\cf2 , \cf4 300\cf2 , \cf4 300\cf2 ), \cf4 50\cf2 );\
\cf4 var\cf2  button1 = NSButton.alloc().init();\
iautoList.addButton(\cf3 "button1"\cf2 , button1)\
\cf4 var\cf2  button2 = NSButton.alloc().init();\
iautoList.addButton(\cf3 "button2"\cf2 , button2)\
\cf4 var\cf2  button3 = NSButton.alloc().init();\
iautoList.addButton(\cf3 "button3"\cf2 , button3)\
\cf4 var\cf2  button4 = NSButton.alloc().init();\
iautoList.addButton(\cf3 "button4"\cf2 , button4)\
\cf4 var\cf2  button5 = NSButton.alloc().init();\
iautoList.addButton(\cf3 "button5"\cf2 , button5)\
\
contentView.addSubview(iautoList.getView());\
iautoList.animation1();\
\cf5 //iautoList.stretch(NSMakeRect(50, 50, 300, 300));\cf2 \
\
\
\cf4 var\cf2  button_animation1 = NSButton.alloc().initWithFrame(NSMakeRect(\cf4 0\cf2 , \cf4 0\cf2 , \cf4 80\cf2 , \cf4 20\cf2 ));\
button_animation1.setAttributedTitle(\cf3 "animation1"\cf2 );\
button_animation1.setBordered(\cf4 true\cf2 );\
button_animation1.setCOSJSTargetFunction(\cf4 function\cf2 (sender)\{\
        context.document.showMessage(\cf3 'animation1'\cf2 )\
        iautoList.animation1();\
    \});\
contentView.addSubview(button_animation1);\
\
\cf4 var\cf2  button_animation2 = NSButton.alloc().initWithFrame(NSMakeRect(\cf4 100\cf2 , \cf4 0\cf2 , \cf4 80\cf2 , \cf4 20\cf2 ));\
button_animation2.setAttributedTitle(\cf3 "animation2"\cf2 );\
button_animation2.setBordered(\cf4 true\cf2 );\
button_animation2.setCOSJSTargetFunction(\cf4 function\cf2 (sender)\{\
        context.document.showMessage(\cf3 'animation2'\cf2 )\
        iautoList.animation2();\
    \});\
contentView.addSubview(button_animation2);\
\
\cf4 var\cf2  button_stretch1 = NSButton.alloc().initWithFrame(NSMakeRect(\cf4 200\cf2 , \cf4 0\cf2 , \cf4 80\cf2 , \cf4 20\cf2 ));\
button_stretch1.setAttributedTitle(\cf3 "stretch1"\cf2 );\
button_stretch1.setBordered(\cf4 true\cf2 );\
button_stretch1.setCOSJSTargetFunction(\cf4 function\cf2 (sender)\{\
        context.document.showMessage(\cf3 'stretch1'\cf2 )\
        iautoList.stretch(NSMakeRect(\cf4 50\cf2 , \cf4 50\cf2 , \cf4 600\cf2 , \cf4 300\cf2 ));\
    \});\
contentView.addSubview(button_stretch1);\
\
\cf4 var\cf2  button_stretch2 = NSButton.alloc().initWithFrame(NSMakeRect(\cf4 300\cf2 , \cf4 0\cf2 , \cf4 80\cf2 , \cf4 20\cf2 ));\
button_stretch2.setAttributedTitle(\cf3 "animation2"\cf2 );\
button_stretch2.setBordered(\cf4 true\cf2 );\
button_stretch2.setCOSJSTargetFunction(\cf4 function\cf2 (sender)\{\
        context.document.showMessage(\cf3 'stretch2'\cf2 )\
        iautoList.stretch(NSMakeRect(\cf4 50\cf2 , \cf4 50\cf2 , \cf4 300\cf2 , \cf4 300\cf2 ));\
    \});\
contentView.addSubview(button_stretch2);\
\
\cf5 /////////////////////////////////////////////////////////////////////\cf2 \
\
threadDictionary[identifier] = Toolbar;\
Toolbar.center();\
Toolbar.makeKeyAndOrderFront(\cf4 nil\cf2 );\
\
log(\cf3 "over"\cf2 )}