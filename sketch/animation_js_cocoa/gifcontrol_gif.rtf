{\rtf1\ansi\ansicpg936\cocoartf1561\cocoasubrtf400
{\fonttbl\f0\fnil\fcharset0 AndaleMono;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;\red67\green67\blue67;\red251\green0\blue7;
\red0\green0\blue255;}
{\*\expandedcolortbl;;\csgray\c0;\csgray\c33333;\cssrgb\c100000\c0\c0;
\cssrgb\c0\c0\c100000;}
\paperw11900\paperh16840\margl1440\margr1440\vieww30920\viewh11340\viewkind0
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\f0\fs24 \cf2 log(\cf3 "start"\cf2 )\
\cf4 //coscript.setShouldKeepAround(true);\cf2 \
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\cf5 var\cf2  identifier = \cf3 "myToolbarThread"\cf2 ;\
\cf5 var\cf2  threadDictionary = NSThread.mainThread().threadDictionary();\
\cf5 var\cf2  Toolbar = threadDictionary[identifier];\
Toolbar = NSPanel.alloc().init();\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\cf4 //Toolbar.setStyleMask(NSTitledWindowMask + NSFullSizeContentViewWindowMask);\cf2 \
Toolbar.setBackgroundColor(NSColor.colorWithRed_green_blue_alpha(\cf5 0.9\cf2 , \cf5 0.9\cf2 , \cf5 0.9\cf2 , \cf5 1\cf2 ));\
\cf4 //Toolbar.setTitleVisibility(NSWindowTitleHidden);\cf2 \
Toolbar.setTitlebarAppearsTransparent(\cf5 true\cf2 );\
Toolbar.setFrame_display(NSMakeRect(\cf5 0\cf2 , \cf5 0\cf2 , \cf5 800\cf2 , \cf5 480\cf2 ), \cf5 false\cf2 );\
Toolbar.setMovableByWindowBackground(\cf5 true\cf2 );\
Toolbar.becomeKeyWindow();\
Toolbar.setLevel(NSFloatingWindowLevel);\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\cf5 var\cf2  contentView = Toolbar.contentView();\
context.document.showMessage(\cf3 'Start'\cf2 )   \
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\cf4 /////////////////////////////////////////////////////////////////////\cf2 \
\
imageView = NSImageView.alloc().init();\
imageView.frame = NSMakeRect(\cf5 0\cf2 , \cf5 0\cf2 , \cf5 700\cf2 , \cf5 420\cf2 );\
imageView.imageFrameStyle = NSImageFramePhoto; \
imageView.imageScaling = NSImageScaleNone;\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\cf5 var\cf2  image = NSImage.alloc().initWithContentsOfFile(\cf3 "/Users/navibase/sketch-iauto/pic1.jpeg"\cf2 );\
imageView.image = image\
contentView.addSubview(imageView);\
\
\
\cf5 class\cf2  SNSGif\
\{\
    constructor()\
    \{\
        \cf5 this\cf2 .image = \cf5 nil\cf2 ;\
        \cf5 this\cf2 .imageView = NSImageView.alloc().init(); \
        \cf5 this\cf2 .imageView.imageFrameStyle = NSImageFramePhoto;\
        \cf5 this\cf2 .imageView.alphaValue = \cf5 0.8\cf2 \
    \}\
    setImage(image)\
    \{\
        \cf5 this\cf2 .image = image;\
        \cf4 //this.imageView.image = image; // this will auto repeat play, cannot control\cf2 \
        \cf5 this\cf2 .reps = image.representations();\
        \cf5 this\cf2 .bitmapRep = \cf5 nil\cf2 \
        \cf5 this\cf2 .totalFrameCnt = \cf5 0\cf2 ;\
        \cf5 for\cf2  (\cf5 var\cf2  x = \cf5 0\cf2 ; x< \cf5 this\cf2 .reps.count(); x++) \{\
            \cf5 this\cf2 .bitmapRep = \cf5 this\cf2 .reps[x];\
            \cf5 var\cf2  props = \cf5 this\cf2 .bitmapRep.valueForProperty(NSImageFrameCount);\
            \cf5 this\cf2 .totalFrameCnt = props.intValue();\
        \};\
        \cf4 //log("totalFrameCnt=" + this.totalFrameCnt.toString())\cf2 \
\
        \cf4 //set image current\cf2 \
        \cf5 if\cf2 (\cf5 this\cf2 .totalFrameCnt > \cf5 0\cf2 ) \{\
            \cf5 var\cf2  number = NSNumber.numberWithInt(\cf5 0\cf2 )\
            \cf5 this\cf2 .bitmapRep.setProperty_withValue(NSImageCurrentFrame, number)\
            \cf5 var\cf2  repData = \cf5 this\cf2 .bitmapRep.representationUsingType_properties(NSPNGFileType, \cf5 nil\cf2 )\
            image = NSImage.alloc().initWithData(repData);\
            \cf5 this\cf2 .imageView.image = image\
        \};\
    \}\
    setFrame(frame)\
    \{\
        \cf5 this\cf2 .imageView.setFrame(frame);\
    \}\
    getView()\
    \{\
        \cf5 return\cf2  \cf5 this\cf2 .imageView;\
    \}\
    play(timeinterval)\
    \{\
        \cf5 var\cf2  totalFrameCnt = \cf5 this\cf2 .totalFrameCnt;\
        \cf5 var\cf2  speedOneFrame = timeinterval/totalFrameCnt;\
        \cf5 var\cf2  curFrameIndex = \cf5 0\cf2 ;\
        \cf5 var\cf2  bitmapRep = \cf5 this\cf2 .bitmapRep;\
        \cf5 var\cf2  imageView = \cf5 this\cf2 .imageView;\
        \cf5 for\cf2 (\cf5 var\cf2  i=\cf5 0\cf2 ; i<=totalFrameCnt; i++)\
        \{\
            coscript.setShouldKeepAround(\cf5 true\cf2 );\
            coscript.scheduleWithInterval_jsFunction(i*speedOneFrame, \cf5 function\cf2 () \{\
\
                \cf5 if\cf2 (curFrameIndex>=totalFrameCnt)\
                \{\
                    curFrameIndex=\cf5 0\cf2 ;\
                \}\
                \cf4 //context.document.showMessage(curFrameIndex.toString());\cf2 \
                \
                \cf4 // draw current frame\cf2 \
                \cf5 var\cf2  number = NSNumber.numberWithInt(curFrameIndex);\
                bitmapRep.setProperty_withValue(NSImageCurrentFrame, number);\
                \cf5 var\cf2  repData = bitmapRep.representationUsingType_properties(NSPNGFileType, \cf5 nil\cf2 )\
                \cf5 var\cf2  image = NSImage.alloc().initWithData(repData);\
                imageView.image = image;\
                \
                curFrameIndex=curFrameIndex+\cf5 1\cf2 \
            \});\
        \}\
    \}\
\}\
\
\cf5 var\cf2  sgif = \cf5 new\cf2  SNSGif()\
sgif.setImage(NSImage.alloc().initWithContentsOfFile(\cf3 "/Users/navibase/sketch-iauto/timg.gif"\cf2 ))\
sgif.setFrame(NSMakeRect(\cf5 0\cf2 , \cf5 0\cf2 , \cf5 300\cf2 , \cf5 300\cf2 ))\
contentView.addSubview(sgif.getView());\
sgif.play(\cf5 1\cf2 );\
\
\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\cf4 // button1\cf2 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\cf5 var\cf2  button1 = NSButton.alloc().initWithFrame(NSMakeRect(\cf5 400\cf2 , \cf5 0\cf2 , \cf5 80\cf2 , \cf5 20\cf2 ));\
button1.setAttributedTitle(\cf3 "button1"\cf2 );\
button1.setBordered(\cf5 true\cf2 );\
button1.sizeToFit();\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\cf4 //button1.setButtonType(NSMomentaryChangeButton)\cf2 \
button1.setCOSJSTargetFunction(\cf5 function\cf2 (sender)\{\
        sgif.play(\cf5 1\cf2 );\
    \});\
contentView.addSubview(button1);\
\
\cf4 // button2\cf2 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\cf5 var\cf2  button1 = NSButton.alloc().initWithFrame(NSMakeRect(\cf5 500\cf2 , \cf5 0\cf2 , \cf5 80\cf2 , \cf5 20\cf2 ));\
button1.setAttributedTitle(\cf3 "button2"\cf2 );\
button1.setBordered(\cf5 true\cf2 );\
button1.sizeToFit();\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\cf4 //button1.setButtonType(NSMomentaryChangeButton)\cf2 \
button1.setCOSJSTargetFunction(\cf5 function\cf2 (sender)\{\
        sgif.play(\cf5 2\cf2 );\
    \});\
contentView.addSubview(button1);\
\
\cf4 /////////////////////////////////////////////////////////////////////\cf2 \
\
threadDictionary[identifier] = Toolbar;\
Toolbar.center();\
Toolbar.makeKeyAndOrderFront(\cf5 nil\cf2 );\
\
log(\cf3 "over"\cf2 )}