{\rtf1\ansi\ansicpg936\cocoartf1561\cocoasubrtf400
{\fonttbl\f0\fnil\fcharset0 AndaleMono;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;\red67\green67\blue67;\red0\green0\blue255;
\red251\green0\blue7;}
{\*\expandedcolortbl;;\csgray\c0;\csgray\c33333;\cssrgb\c0\c0\c100000;
\cssrgb\c100000\c0\c0;}
\paperw11900\paperh16840\margl1440\margr1440\vieww25820\viewh14040\viewkind0
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\f0\fs24 \cf2 log(\cf3 "start"\cf2 )\
coscript.setShouldKeepAround(\cf4 true\cf2 );\
\
\cf4 var\cf2  identifier = \cf3 "myToolbarThread"\cf2 ;\
\cf4 var\cf2  threadDictionary = NSThread.mainThread().threadDictionary();\
\cf4 var\cf2  Toolbar = threadDictionary[identifier];\
Toolbar = NSPanel.alloc().init();\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\cf5 //Toolbar.setStyleMask(NSTitledWindowMask + NSFullSizeContentViewWindowMask);\cf2 \
Toolbar.setBackgroundColor(NSColor.colorWithRed_green_blue_alpha(\cf4 1.0\cf2 , \cf4 1.0\cf2 , \cf4 1.0\cf2 , \cf4 1\cf2 ));\
\cf5 //Toolbar.setTitleVisibility(NSWindowTitleHidden);\cf2 \
Toolbar.setTitlebarAppearsTransparent(\cf4 true\cf2 );\
Toolbar.setFrame_display(NSMakeRect(\cf4 0\cf2 , \cf4 0\cf2 , \cf4 800\cf2 , \cf4 480\cf2 ), \cf4 false\cf2 );\
Toolbar.setMovableByWindowBackground(\cf4 true\cf2 );\
Toolbar.becomeKeyWindow();\
Toolbar.setLevel(NSFloatingWindowLevel);\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\cf4 var\cf2  contentView = Toolbar.contentView();\
context.document.showMessage(\cf3 'Start'\cf2 )   \
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\cf5 // background image\cf2 \
imageView = NSImageView.alloc().init();\
imageView.frame = NSMakeRect(\cf4 0\cf2 , \cf4 0\cf2 , \cf4 700\cf2 , \cf4 420\cf2 );\
imageView.imageFrameStyle = NSImageFramePhoto; \
imageView.imageScaling = NSImageScaleNone;\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\cf4 var\cf2  image = NSImage.alloc().initWithContentsOfFile(\cf3 "/Users/navibase/sketch-iauto/pic1.jpeg"\cf2 );\
imageView.image = image\
contentView.addSubview(imageView);\
\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\cf5 ///////////////////////////////////////////////////////////////////////////\cf2 \
\cf5 // SNSButton\cf2 \
\
\cf5 // SInherit\cf2 \
SInherit = \cf4 function\cf2 (className, BaseClass, selectorHandlerDict) \{\
    \cf4 var\cf2  uniqueClassName = className + NSUUID.UUID().UUIDString();\
    \cf4 var\cf2  delegateClassDesc = MOClassDescription.allocateDescriptionForClassWithName_superclass_(uniqueClassName, BaseClass);\
    \cf4 for\cf2  (\cf4 var\cf2  selectorString \cf4 in\cf2  selectorHandlerDict) \{\
        delegateClassDesc.addInstanceMethodWithSelector_function_(selectorString, selectorHandlerDict[selectorString]);\
        \cf5 //log(selectorString + "->" + selectorHandlerDict[selectorString].toString())\cf2 \
    \}\
    delegateClassDesc.registerClass();\
    \cf4 return\cf2  NSClassFromString(uniqueClassName);\
\};\
\
\cf5 // SNSButtonInner\cf2 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\cf4 var\cf2  SNSButtonInner = SInherit(\cf3 "SNSButton"\cf2 , NSButton, \{\
    \cf3 "mouseDown:"\cf2 :\cf4 function\cf2 (ev)\{ \
            \cf5 //context.document.showMessage('mouseDown')\cf2 \
            \cf4 if\cf2 (\cf4 this\cf2 .mouseDownHander)\
            \{\
                \cf4 this\cf2 .mouseDownHander(ev)\
            \}\
        \},\
    \cf3 "mouseUp:"\cf2 :\cf4 function\cf2 (ev)\{ \
            \cf5 //context.document.showMessage('mouseUp')\cf2 \
            \cf4 if\cf2 (\cf4 this\cf2 .mouseUpHander)\
            \{\
                \cf4 this\cf2 .mouseUpHander(ev)\
            \}\
        \},\
    \cf3 "mouseEntered:"\cf2 :\cf4 function\cf2 (ev)\{\
            \cf5 //context.document.showMessage('mouseEntered')\cf2 \
            \cf4 if\cf2 (\cf4 this\cf2 .mouseEnteredHander)\
            \{\
                \cf4 this\cf2 .mouseEnteredHander(ev)\
            \}\
        \},\
    \cf3 "mouseExited:"\cf2 :\cf4 function\cf2 (ev)\{ \
            \cf5 //context.document.showMessage('mouseExited')\cf2 \
            \cf4 if\cf2 (\cf4 this\cf2 .mouseExitedHander)\
            \{\
                \cf4 this\cf2 .mouseExitedHander(ev)\
            \}\
        \},\
    \cf3 "addMouseDownHander:"\cf2 :\cf4 function\cf2 (f)\{ \
            \cf4 this\cf2 .mouseDownHander = f;\
        \},\
    \cf3 "addMouseUpHander:"\cf2 :\cf4 function\cf2 (f)\{ \
            \cf4 this\cf2 .mouseUpHander = f;\
        \},\
    \cf3 "addMouseEnteredHander:"\cf2 :\cf4 function\cf2 (f)\{ \
            \cf4 this\cf2 .mouseEnteredHander = f;\
        \},\
    \cf3 "addMouseExitedHander:"\cf2 :\cf4 function\cf2 (f)\{ \
            \cf4 this\cf2 .mouseExitedHander = f;\
        \},\
\})\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\cf5 // SNSButton\cf2 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\cf4 class\cf2  SNSButton\
\{\
    constructor()\
    \{\
        \cf4 this\cf2 .button = SNSButtonInner.alloc().init();\
\
        \cf5 // create layer\cf2 \
        \cf4 var\cf2  buttonViewLayer = CALayer.layer();\
        buttonViewLayer.setBackgroundColor(CGColorCreateGenericRGB(\cf4 0.4\cf2 ,\'a0\cf4 0.4\cf2 ,\'a0\cf4 0.4\cf2 ,\'a0\cf4 0.8\cf2 ));\
        \cf4 this\cf2 .button.setLayer(buttonViewLayer);\
        \cf4 this\cf2 .button.setWantsLayer(\cf4 true\cf2 )\
        \
        \cf5 // create this.buttontextField\cf2 \
        \cf4 this\cf2 .buttontextField = NSTextField.alloc().init()\
\
        \cf5 // default handler\cf2 \
        \cf4 var\cf2  self=\cf4 this\cf2 ;\
        \cf4 this\cf2 .addMouseDownHander(\cf4 function\cf2 (ev)\{\
            self.button.layer().setBackgroundColor(CGColorCreateGenericRGB(\cf4 0.6\cf2 ,\'a0\cf4 0.0\cf2 ,\'a0\cf4 0.0\cf2 ,\'a0\cf4 0.8\cf2 ));\
        \})\
        \cf4 this\cf2 .addMouseUpHander(\cf4 function\cf2 (ev)\{\
            self.button.layer().setBackgroundColor(CGColorCreateGenericRGB(\cf4 0.4\cf2 ,\'a0\cf4 0.4\cf2 ,\'a0\cf4 0.4\cf2 ,\'a0\cf4 0.8\cf2 ));\
        \})\
        \cf4 this\cf2 .addMouseEnteredHander(\cf4 function\cf2 (ev)\{\
            self.buttontextField.setTextColor(NSColor.colorWithDeviceRed_green_blue_alpha(\cf4 0.9\cf2 , \cf4 0.9\cf2 , \cf4 0.9\cf2 , \cf4 0.9\cf2 ))\
        \})\
        \cf4 this\cf2 .addMouseExitedHander(\cf4 function\cf2 (ev)\{\
            self.buttontextField.setTextColor(NSColor.colorWithDeviceRed_green_blue_alpha(\cf4 0.8\cf2 , \cf4 0.8\cf2 , \cf4 0.8\cf2 , \cf4 0.8\cf2 ))\
        \})\
    \}\
    clear()\
    \{\
        \cf4 var\cf2  self=\cf4 this\cf2 ;\
        \cf4 if\cf2 (self.button.layer())\
        \{\
            self.button.layer().setBackgroundColor(CGColorCreateGenericRGB(\cf4 0.6\cf2 ,\'a0\cf4 0.0\cf2 ,\'a0\cf4 0.0\cf2 ,\'a0\cf4 0\cf2 ));\
        \}\
\
        \cf4 this\cf2 .addMouseDownHander(\cf4 function\cf2 (ev)\{\
            self.button.layer().setBackgroundColor(CGColorCreateGenericRGB(\cf4 0.6\cf2 ,\'a0\cf4 0.0\cf2 ,\'a0\cf4 0.0\cf2 ,\'a0\cf4 0\cf2 ));\
        \})\
        \cf4 this\cf2 .addMouseUpHander(\cf4 function\cf2 (ev)\{\
            self.button.layer().setBackgroundColor(CGColorCreateGenericRGB(\cf4 0.4\cf2 ,\'a0\cf4 0.4\cf2 ,\'a0\cf4 0.4\cf2 ,\'a0\cf4 0\cf2 ));\
        \})\
        \cf4 this\cf2 .addMouseEnteredHander(\cf4 function\cf2 (ev)\{\
            self.buttontextField.setTextColor(NSColor.colorWithDeviceRed_green_blue_alpha(\cf4 0.9\cf2 , \cf4 0.9\cf2 , \cf4 0.9\cf2 , \cf4 0\cf2 ))\
        \})\
        \cf4 this\cf2 .addMouseExitedHander(\cf4 function\cf2 (ev)\{\
            self.buttontextField.setTextColor(NSColor.colorWithDeviceRed_green_blue_alpha(\cf4 0.8\cf2 , \cf4 0.8\cf2 , \cf4 0.8\cf2 , \cf4 0\cf2 ))\
        \})\
    \}\
    getView()\
    \{\
        \cf4 return\cf2  \cf4 this\cf2 .button;\
    \}\
    setFrame(frame)\
    \{\
        \cf4 this\cf2 .button.setFrame(frame);\
        \cf4 this\cf2 .width = frame.size.width;\
        \cf4 this\cf2 .height = frame.size.height;\
        \
        \cf5 // text\cf2 \
        \cf4 var\cf2  fontH = \cf4 this\cf2 .height/\cf4 2\cf2 \
        \cf4 this\cf2 .buttontextField.setBezeled(\cf4 false\cf2 )\
        \cf4 this\cf2 .buttontextField.setDrawsBackground(\cf4 false\cf2 )\
        \cf4 this\cf2 .buttontextField.setEditable(\cf4 false\cf2 )\
        \cf4 this\cf2 .buttontextField.setSelectable(\cf4 false\cf2 )\
        \cf4 this\cf2 .buttonfont = NSFont.fontWithName_size(\cf3 "Arial"\cf2 , fontH);\
        \cf4 this\cf2 .buttontextField.setFont(\cf4 this\cf2 .buttonfont);\
        \cf4 this\cf2 .buttontextField.setTextColor(NSColor.colorWithDeviceRed_green_blue_alpha(\cf4 0.8\cf2 , \cf4 0.8\cf2 , \cf4 0.8\cf2 , \cf4 0.8\cf2 ))\
        \cf4 this\cf2 .buttontextField.setAlignment(NSCenterTextAlignment)\
        \cf4 var\cf2  textHeigh = \cf4 this\cf2 .buttontextField.attributedStringValue().size().height;\
        \cf4 var\cf2  TextY=(\cf4 this\cf2 .height-textHeigh)/\cf4 2\cf2 \
        \cf4 this\cf2 .buttontextField.setFrame(NSMakeRect(\cf4 0\cf2 , TextY, \cf4 this\cf2 .width, \cf4 this\cf2 .height))\
        \cf4 this\cf2 .button.addSubview(\cf4 this\cf2 .buttontextField);\
\
        \cf5 // tracking area\cf2 \
        \cf4 this\cf2 .buttontrackingArea = NSTrackingArea.alloc().initWithRect_options_owner_userInfo(NSMakeRect(\cf4 0\cf2 , \cf4 0\cf2 , \cf4 this\cf2 .width, \cf4 this\cf2 .height),\
            NSTrackingMouseMoved+NSTrackingActiveInKeyWindow+NSTrackingMouseEnteredAndExited, \cf4 this\cf2 .button, \cf4 nil\cf2 );\
        \cf4 this\cf2 .button.addTrackingArea(\cf4 this\cf2 .buttontrackingArea);\
    \}\
    frame()\
    \{\
        \cf4 return\cf2  \cf4 this\cf2 .button.frame();\
    \}\
    setAttributedTitle(text)\
    \{\
        \cf4 this\cf2 .buttontextField.setStringValue(text);\
    \}\
    setImage(image)\
    \{\
        \cf4 this\cf2 .button.setLayer(\cf4 nil\cf2 );\
        \cf4 this\cf2 .button.setImage(image);\
        \cf4 this\cf2 .button.cell().setImageScaling(NSImageScaleAxesIndependently);\
        \cf4 this\cf2 .button.setBordered(\cf4 false\cf2 );\
    \}\
    addMouseDownHander(f)\{\
        \cf4 this\cf2 .button.addMouseDownHander(f);\
    \}\
    addMouseUpHander(f)\{\
        \cf4 this\cf2 .button.addMouseUpHander(f);\
    \}\
    addMouseEnteredHander(f)\{\
        \cf4 this\cf2 .button.addMouseEnteredHander(f);\
    \}\
    addMouseExitedHander(f)\{\
        \cf4 this\cf2 .button.addMouseExitedHander(f);\
    \}\
\}\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\cf5 ////////////////////////////////////////////////////////////////////////////////////////////\cf2 \
\cf5 // test\cf2 \
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\cf4 var\cf2  sbtn = \cf4 new\cf2  SNSButton()\
sbtn.setFrame(NSMakeRect(\cf4 10\cf2 , \cf4 10\cf2 , \cf4 300\cf2 , \cf4 50\cf2 ))\
sbtn.setAttributedTitle(\cf3 "ABC"\cf2 )\
sbtn.addMouseDownHander(\cf4 function\cf2 (ev)\{\
    sbtn.button.layer().setBackgroundColor(CGColorCreateGenericRGB(\cf4 0.6\cf2 ,\'a0\cf4 0.0\cf2 ,\'a0\cf4 0.0\cf2 ,\'a0\cf4 0.8\cf2 ));\
\})\
sbtn.addMouseUpHander(\cf4 function\cf2 (ev)\{\
    sbtn.button.layer().setBackgroundColor(CGColorCreateGenericRGB(\cf4 0.4\cf2 ,\'a0\cf4 0.4\cf2 ,\'a0\cf4 0.4\cf2 ,\'a0\cf4 0.8\cf2 ));\
\})\
sbtn.addMouseEnteredHander(\cf4 function\cf2 (ev)\{\
    sbtn.buttontextField.setTextColor(NSColor.colorWithDeviceRed_green_blue_alpha(\cf4 0.9\cf2 , \cf4 0.9\cf2 , \cf4 0.9\cf2 , \cf4 0.9\cf2 ))\
\})\
sbtn.addMouseExitedHander(\cf4 function\cf2 (ev)\{\
    sbtn.buttontextField.setTextColor(NSColor.colorWithDeviceRed_green_blue_alpha(\cf4 0.8\cf2 , \cf4 0.8\cf2 , \cf4 0.8\cf2 , \cf4 0.8\cf2 ))\
\})\
contentView.addSubview(sbtn.getView());\
\
threadDictionary[identifier] = Toolbar;\
Toolbar.center();\
Toolbar.makeKeyAndOrderFront(\cf4 nil\cf2 );\
\
log(\cf3 "over"\cf2 )}