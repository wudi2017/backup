{\rtf1\ansi\ansicpg936\cocoartf1561\cocoasubrtf400
{\fonttbl\f0\fnil\fcharset0 AndaleMono;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;\red67\green67\blue67;\red0\green0\blue255;
\red251\green0\blue7;\red189\green229\blue101;}
{\*\expandedcolortbl;;\csgray\c0;\csgray\c33333;\cssrgb\c0\c0\c100000;
\cssrgb\c100000\c0\c0;\csgenericrgb\c74200\c89800\c39700;}
\paperw11900\paperh16840\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\slleading20\pardirnatural\partightenfactor0

\f0\fs24 \cf2 log(\cf3 "start"\cf2 )\
coscript.setShouldKeepAround(\cf4 true\cf2 );\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\slleading20\pardirnatural\partightenfactor0
\cf4 var\cf2  identifier = \cf3 "myToolbarThread"\cf2 ;\
\cf4 var\cf2  threadDictionary = NSThread.mainThread().threadDictionary();\
\cf4 var\cf2  Toolbar = threadDictionary[identifier];\
Toolbar = NSPanel.alloc().init();\
\cf5 //Toolbar.setStyleMask(NSTitledWindowMask + NSFullSizeContentViewWindowMask);\cf2 \
Toolbar.setBackgroundColor(NSColor.colorWithRed_green_blue_alpha(\cf4 1.0\cf2 , \cf4 1.0\cf2 , \cf4 1.0\cf2 , \cf4 1\cf2 ));\
\cf5 //Toolbar.setTitleVisibility(NSWindowTitleHidden);\cf2 \
Toolbar.setTitlebarAppearsTransparent(\cf4 true\cf2 );\
Toolbar.setFrame_display(NSMakeRect(\cf4 0\cf2 , \cf4 0\cf2 , \cf4 800\cf2 , \cf4 480\cf2 ), \cf4 false\cf2 );\
Toolbar.setMovableByWindowBackground(\cf4 true\cf2 );\
Toolbar.becomeKeyWindow();\
Toolbar.setLevel(NSFloatingWindowLevel);\
\cf4 var\cf2  contentView = Toolbar.contentView();\
context.document.showMessage(\cf3 'Start'\cf2 )   \
\
\cf5 // background image\cf2 \
imageView = NSImageView.alloc().init();\
imageView.frame = NSMakeRect(\cf4 \cb6 0\cf2 \cb1 , \cf4 0\cf2 , \cf4 700\cf2 , \cf4 420\cf2 );\
imageView.imageFrameStyle = NSImageFramePhoto; \
imageView.imageScaling = NSImageScaleNone;\
\cf4 var\cf2  image = NSImage.alloc().initWithContentsOfFile(\cf3 "/Users/navibase/sketch-iauto/pic1.jpeg"\cf2 );\
imageView.image = image\
contentView.addSubview(imageView);\
\
Inherit = \cf4 function\cf2 (className, BaseClass, selectorHandlerDict) \{\
    \cf4 var\cf2  uniqueClassName = className + NSUUID.UUID().UUIDString();\
    \cf4 var\cf2  delegateClassDesc = MOClassDescription.allocateDescriptionForClassWithName_superclass_(uniqueClassName, BaseClass);\
    \cf4 for\cf2  (\cf4 var\cf2  selectorString \cf4 in\cf2  selectorHandlerDict) \{\
        delegateClassDesc.addInstanceMethodWithSelector_function_(selectorString, selectorHandlerDict[selectorString]);\
        log(selectorString + \cf3 "->"\cf2  + selectorHandlerDict[selectorString].toString())\
    \}\
    delegateClassDesc.registerClass();\
    \cf4 return\cf2  NSClassFromString(uniqueClassName);\
\};\
\
\cf4 var\cf2  MyView = Inherit(\cf3 "MyView"\cf2 , NSView, \{\
    \cf3 "mouseDown:"\cf2 :\cf4 function\cf2 (ev)\{ \
            context.document.showMessage(\cf3 'mouseDown'\cf2 )\
        \},\
    \cf3 "mouseUp:"\cf2 :\cf4 function\cf2 (ev)\{ \
            context.document.showMessage(\cf3 'mouseUp'\cf2 )\
        \},\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\cf2     \cf3 "mouseMoved:"\cf2 :\cf4 function\cf2 (ev)\{ \
            context.document.showMessage(\cf3 'mouseMoved'\cf2 )\
        \},\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\slleading20\pardirnatural\partightenfactor0
\cf2     \cf3 "mouseEntered:"\cf2 :\cf4 function\cf2 (ev)\{\
            context.document.showMessage(\cf3 'mouseEntered'\cf2 )\
        \},\
    \cf3 "mouseExited:"\cf2 :\cf4 function\cf2 (ev)\{ \
            context.document.showMessage(\cf3 'mouseExited'\cf2 )\
        \},\
\})\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\slleading20\pardirnatural\partightenfactor0
\cf4 var\cf2  viewA = MyView.alloc().init();\
viewA.frame = NSMakeRect(\cf4 0\cf2 , \cf4 0\cf2 , \cf4 600\cf2 , \cf4 300\cf2 );\
viewA.setWantsLayer(\cf4 true\cf2 );\
\cf4 var\cf2  viewALayer = CALayer.layer();\
viewALayer.setBackgroundColor(CGColorCreateGenericRGB(\cf4 0.8\cf2 ,\'a0\cf4 0.0\cf2 ,\'a0\cf4 0.0\cf2 ,\'a0\cf4 1\cf2 ));\
viewA.setLayer(viewALayer);\
viewA.alphaValue = \cf4 1\cf2 ;     \
trackingArea = NSTrackingArea.alloc().initWithRect_options_owner_userInfo(NSMakeRect(\cf4 0\cf2 , \cf4 0\cf2 , \cf4 600\cf2 , \cf4 300\cf2 ), NSTrackingMouseMoved+NSTrackingActiveInKeyWindow+NSTrackingMouseEnteredAndExited, viewA, \cf4 nil\cf2 );\
viewA.addTrackingArea(trackingArea);\
viewA.becomeFirstResponder()\
contentView.addSubview(viewA);\
\
\
threadDictionary[identifier] = Toolbar;\
Toolbar.center();\
Toolbar.makeKeyAndOrderFront(\cf4 nil\cf2 );\
\
log(\cf3 "over"\cf2 )}